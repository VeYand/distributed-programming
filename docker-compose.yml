services:
  nginx:
    image: mirror.gcr.io/nginx:1.23.4
    container_name: valuator-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - valuator-1
      - valuator-2
      - rank-calculator-1
      - rank-calculator-2
      - user
    networks:
      - service-network

  valuator-1:
    container_name: valuator-1
    build:
      context: ./services/valuator
      dockerfile: Dockerfile
    volumes:
      - ./services/valuator/data:/app/data
    environment:
      - RABBITMQ_USER=rabbitmquser
      - RABBITMQ_PASS=rabbitmqpassword
      - REDIS_MAIN_URL=redis:6379
      - REDIS_MAIN_PASSWORD=redis-main-pass
      - REDIS_RU_URL=redis-ru:6379
      - REDIS_RU_PASSWORD=redis-ru-pass
      - REDIS_EU_URL=redis-eu:6379
      - REDIS_EU_PASSWORD=redis-eu-pass
      - REDIS_ASIA_URL=redis-asia:6379
      - REDIS_ASIA_PASSWORD=redis-asia-pass
      - USER_INTERNAL_URL=http://user:8081
    depends_on:
      redis-main:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - service-network

  valuator-2:
    container_name: valuator-2
    build:
      context: ./services/valuator
      dockerfile: Dockerfile
    volumes:
      - ./services/valuator/data:/app/data
    environment:
      - RABBITMQ_USER=rabbitmquser
      - RABBITMQ_PASS=rabbitmqpassword
      - REDIS_MAIN_URL=redis:6379
      - REDIS_MAIN_PASSWORD=redis-main-pass
      - REDIS_RU_URL=redis-ru:6379
      - REDIS_RU_PASSWORD=redis-ru-pass
      - REDIS_EU_URL=redis-eu:6379
      - REDIS_EU_PASSWORD=redis-eu-pass
      - REDIS_ASIA_URL=redis-asia:6379
      - REDIS_ASIA_PASSWORD=redis-asia-pass
      - USER_INTERNAL_URL=http://user:8081
    depends_on:
      redis-main:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - service-network

  rank-calculator-1:
    container_name: rank-calculator-1
    build: ./services/rank-calculator
    environment:
      - RABBITMQ_USER=rabbitmquser
      - RABBITMQ_PASS=rabbitmqpassword
      - REDIS_MAIN_URL=redis:6379
      - REDIS_MAIN_PASSWORD=redis-main-pass
      - REDIS_RU_URL=redis-ru:6379
      - REDIS_RU_PASSWORD=redis-ru-pass
      - REDIS_EU_URL=redis-eu:6379
      - REDIS_EU_PASSWORD=redis-eu-pass
      - REDIS_ASIA_URL=redis-asia:6379
      - REDIS_ASIA_PASSWORD=redis-asia-pass
      - USER_INTERNAL_URL=http://user:8081
      - VALUATOR_INTERNAL_URL=http://valuator-1:8081
    depends_on:
      redis-main:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - service-network

  rank-calculator-2:
    container_name: rank-calculator-2
    build: ./services/rank-calculator
    environment:
      - RABBITMQ_USER=rabbitmquser
      - RABBITMQ_PASS=rabbitmqpassword
      - REDIS_MAIN_URL=redis:6379
      - REDIS_MAIN_PASSWORD=redis-main-pass
      - REDIS_RU_URL=redis-ru:6379
      - REDIS_RU_PASSWORD=redis-ru-pass
      - REDIS_EU_URL=redis-eu:6379
      - REDIS_EU_PASSWORD=redis-eu-pass
      - REDIS_ASIA_URL=redis-asia:6379
      - REDIS_ASIA_PASSWORD=redis-asia-pass
      - USER_INTERNAL_URL=http://user:8081
      - VALUATOR_INTERNAL_URL=http://valuator-2:8081
    depends_on:
      redis-main:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - service-network

  eventslogger:
    container_name: eventslogger
    build: ./services/eventslogger
    environment:
      - RABBITMQ_USER=rabbitmquser
      - RABBITMQ_PASS=rabbitmqpassword
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - service-network

  redis-main:
    image: redis:alpine
    container_name: redis
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis-main-pass
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "redis-main-pass", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - service-network

  redis-ru:
    image: redis:alpine
    container_name: redis-ru
    ports:
      - "127.0.0.1:6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis-ru-pass
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "redis-ru-pass", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - service-network

  redis-eu:
    image: redis:alpine
    container_name: redis-eu
    ports:
      - "127.0.0.1:6381:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis-eu-pass
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "redis-eu-pass", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - service-network

  redis-asia:
    image: redis:alpine
    container_name: redis-asia
    ports:
      - "127.0.0.1:6382:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis-asia-pass
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "redis-asia-pass", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - service-network

  rabbitmq:
    image: mirror.gcr.io/rabbitmq:3.13.7
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmquser
      - RABBITMQ_DEFAULT_PASS=rabbitmqpassword
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - service-network

  centrifugo:
    image: centrifugo/centrifugo:latest
    container_name: centrifugo
    environment:
      - CENTRIFUGO_ADMIN_PASSWORD=admin_password
      - CENTRIFUGO_ADMIN_SECRET=admin_secret
    ports:
      - "127.0.0.1:8000:8000"
      - "127.0.0.1:3000:3000"
    volumes:
      - ./services/centrifugo/config/config.json:/centrifugo/config.json
    networks:
      - service-network

  user:
    container_name: user
    build:
      context: ./services/user
      dockerfile: Dockerfile
    volumes:
      - ./services/user/data:/app/data
    environment:
      - REDIS_USER_URL=redis-user:6379
      - REDIS_USER_PASSWORD=redis-user-pass
      - SESSION_AUTH_KEY=hLZL0sfGF1X6e4od+bLd7M/8QifKzEnOukKnwRahxFs=
      - SESSION_ENC_KEY=f4EGkLu7LDNjgLJww7tNbKcogB1lVWrFv5haX87/bNE=
    depends_on:
      redis-main:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - service-network

  redis-user:
    image: redis:alpine
    container_name: redis-user
    ports:
      - "127.0.0.1:6378:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis-user-pass
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "redis-user-pass", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - service-network

  protokey:
    container_name: protokey
    build:
      context: ./services/protokey
      dockerfile: Dockerfile
    volumes:
      - ./services/protokey/data:/app/data
    networks:
      - service-network

  protocli:
    container_name: protocli
    build:
      context: ./services/protocli
      dockerfile: Dockerfile
    depends_on:
      - protokey
    networks:
      - service-network

networks:
  service-network:

volumes:
  db-data:
  redis_data:
  rabbitmq_data: